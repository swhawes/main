---
title: "Visualizations"
format: html
editor: source
---

```{r install}

## Install necessary packages (if not already installed)
```


```{r load}
library(papaja)
```


```{r diagnosticplots}
#| column: screen-inset-shaded
#| layout-nrow: 2
 
random_intercepts.std <- resid(random_intercepts)/sd(resid(random_intercepts))
plot(random_intercepts.std, ylab="Standardized Residuals")

## Outlier Tests. 
car::infIndexPlot(random_intercepts)

## qqplot
ggplot(as.data.frame(random_intercepts.std), aes(sample = random_intercepts.std)) +
  geom_qq() +
  geom_qq_line()

## Predicted vs Actual plot
predicted <- estimate_expectation(random_intercepts, data = "grid")
plot(predicted)

## Estimated means plot
means <- estimate_means(random_intercepts)
plot(means)

```

```{r barplot}
#| messages: FALSE
#| warning: FALSE
#| echo: TRUE

# Basic ggplot2 barplot with mean
p<-df_long %>%
    #filter(!is.na(mature_vg)) %>% # filter on non-missing values  
    ggplot(aes(x = event, y = cu_traits, fill = mature_vg)) +
    geom_col(position = "dodge",
           stat = "summary",
           fun = "mean",
           #fill = "#AA4A44",
           #color = "#0099f9"
           ) +
    #scale_fill_brewer(palette = "Set1") +
    scale_fill_manual(values = c("#3db5ff", "#0099f9")) +
    #scale_fill_gradient(high = "#B00B69", low = "#0e0e63") +
    #geom_text(aes(label = cu_traits), position = position_dodge(0.9), 
              #vjust = 2, size = 4, color = "#ffffff") +
    labs(title = "Behavior Problems by Video Game Groups", subtitle = "Simple bar chart",
         caption = "Simple caption", x = "Event", y = "Callous-Unemotional Traits") +
              #coord_flip() +
    #geom_hline(yintercept = mean(df_long$cu_traits), linetype = "dashed", size = 1) +
    theme_minimal() +
    theme(
          plot.title = element_text(color = "#0099f9", size = 20, hjust = 0.5),
          plot.subtitle = element_text(face = "bold", hjust = 1),
          plot.caption = element_text(face = "italic", hjust = 0),
          axis.title.x = element_text(color = "#0099f9", size = 15, face = "bold"),
          axis.title.y = element_text(size = 15, face = "italic")
  )
p
```

```{r LMMrigraph}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

## LMM-ri plot of estimated random intercepts 
model <- lmer(1 + event + vg_total * mature_vg + sex + (1 | ids), data = df_long)
preds <- estimate_relation(model, include_random = TRUE)

#cu_traits ~ 1 + event + vg_total * mature_vg + sex + (1 | ids)
#random_intercepts <- lmer(cu_traits ~ 1 + event + vg_total * mature_vg + sex + #(1|ids), data = df_long, REML=T)

## Adding fixed effect trajectory to LMM-ri plot 
fixed_pred <- estimate_relation(model) # This time, include_random is FALSE (default)
 plot(preds, ribbon = list(alpha = 0)) + # Previous plot
   geom_ribbon(data = fixed_pred, aes(x = vg_total, ymin = CI_low, ymax = CI_high), alpha = 0.4) +
   geom_line(data = fixed_pred, aes(x = vg_total, y = Predicted), size = 0.5)
## {-}
```
