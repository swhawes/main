#edges [arrowhead = none]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=white];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5 arrowhead = diamond];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5 arrowhead = normal];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=white];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=white];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5, spline="line"];
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=white];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
subgraph cluster_0 {
style=filled;
color=white;
node [style=filled,color=orange];
m1 m2 m3 m4;
label = "process #1";
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
subgraph cluster_0 {
style=filled;
color=white;
node [style=filled,color=orange];
m1 m2 m3 m4;
}
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=white];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ooverlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
subgraph cluster_0 {
style=filled;
color=white;
node [style=filled,color=orange];
rankdir="LR";
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ overlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
subgraph cluster_0 {
style=filled;
color=white;
node [style=filled,color=orange];
m1 m2 m3 m4;
}
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=white];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
library(DiagrammeR)
grViz("
digraph LGCM {
graph [ overlap = true, fontsize = 10, bgcolor=lightblue];
# Nodes (latent variables)
d1 [label = 'Intercept', shape = ellipse, width=1, style=bold, color=white ];
d2 [label = 'Slope', shape = ellipse, width=1, style=filled, color=white];
subgraph cluster_0 {
style=filled;
color=white;
node [style=filled,color=orange];
m1 m2 m3 m4;
}
# Nodes (observed variables)
m1 [label = 'Yt1', shape = rectangle style=filled, color=red];
m2 [label = 'Yt2', shape = rectangle style=filled, color=white];
m3 [label = 'Yt3', shape = rectangle style=filled, color=white];
m4 [label = 'Yt4', shape = rectangle style=filled, color=white];
#edges [arrowhead = diamond]
d1->m1 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m1 [label = '0', style=bold,color=pink,penwidth=1.5];
d1->m2 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m3 [label = '1', style=bold,color=grey,penwidth=1.5];
d1->m4 [label = '1', style=bold,color=grey,penwidth=1.5];
d2->m2 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m3 [label = '0', style=bold,color=pink,penwidth=1.5];
d2->m4 [label = '0', style=bold,color=pink,penwidth=1.5];
#Define Errors
#m1->m1 [dir=both, tailport = 'se', headport = 'sw', arrowhead=vee, arrowtail=vee, style=dashed, fontsize = 3]
}
")
digraph HSCFA {
library(DiagrammeR)
grViz("
digraph HSCFA {
vis -> x1 [weight=1000];
vis -> x2 [weight=1000];
vis -> x3 [weight=1000];
text -> x4 [weight=1000];
text -> x5 [weight=1000];
text -> x6 [weight=1000];
math -> x7 [weight=1000];
math -> x8 [weight=1000];
math -> x9 [weight=1000];
vis -> math [dir=both];
vis -> text [dir=both];
text -> math [dir=both];
x1 [shape=box,group="obsvar"];
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
Yt1; Yt2; Yt3; Yt4;
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
Intercept; Slope;
# several 'edge' statements
Intercept->Yt1 [style=bold,color=green]
Intercept->Yt2 [style=bold,color=blue]
Intercept->Yt3 [style=bold,color=blue]
Intercept->Yt4 [style=bold,color=blue]
Slope->Yt1 [style=bold,color=orange];
Slope->Yt2 [style=bold,color=orange]
Slope->Yt3 [style=bold,color=orange]
Slope->Yt4 [style=bold,color=orange]
}
")
#| class.source: 'fold-hide'
#| message: FALSE
#| warning: FALSE
#| echo: FALSE
#Load packages
library(tidyverse)
library(arrow)
library(gt)
library(psych)
library(sciplot)
library(Rmisc)
#| class.source: 'fold-hide'
#| message: FALSE
#| warning: FALSE
#| echo: FALSE
df<- read_csv("./part-0.csv")
as_tibble(df)
tibble(df)
#df %>%
#  filter(!is.na(event)) %>%
#  count(event, sort = TRUE)
df <- df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"mature_vg" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd"="ksads_15_902_p"
)
df<- read_csv("./part-0.csv")
as_tibble(df)
tibble(df)
df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"mature_vg" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd"="ksads_15_902_p"
)
df<- read_csv("./part-0.csv")
as_tibble(df)
tibble(df)
df <- df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"mature_vg" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd"="ksads_15_902_p"
)
df$ids <- as.factor(df$ids)
#| include: FALSE
#Preliminary Setup
knitr::opts_chunk$set(echo = TRUE)
#| class.source: 'fold-hide'
#| message: FALSE
#| warning: FALSE
#| echo: FALSE
# Install necessary packages (if not already installed)
if (!("tidyverse" %in% installed.packages())) install.packages("tidyverse")
if (!("arrow" %in% installed.packages())) install.packages("arrow")
if (!("gt" %in% installed.packages())) install.packages("gt")
if (!("psych" %in% installed.packages())) install.packages("psych")
if (!("sciplot" %in% installed.packages())) install.packages("sciplot")
if (!("Rmisc" %in% installed.packages())) install.packages("Rmisc")
#| class.source: 'fold-hide'
#| message: FALSE
#| warning: FALSE
#| echo: FALSE
#Load packages
library(tidyverse)
library(arrow)
library(gt)
library(psych)
library(sciplot)
library(Rmisc)
df_ndaFile <- readRDS("/Users/shawes/Library/CloudStorage/GoogleDrive-swh004@gmail.com/My Drive/bio_Main/_data/nda3.0.rds")
df <- (df_ndaFile) %>%
select(subjectid, eventname, site_id_l, rel_family_id, sex_at_birth, demo_brthdat_p, screentime_13, screentime_ss_weekday, screentime_ss_weekend, cbcl_scr_syn_external_r, ksads_15_902_p)
write_dataset(df, "./", format = "csv")
write_dataset(df, "./", format = "arrow")
df<- read_csv("./part-0.csv")
as_tibble(df)
tibble(df)
df <- df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"mature_vg" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd"="ksads_15_902_p"
)
df <- df %>% rename(
"ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"mature_vg" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd"="ksads_15_902_p"
)
df <- df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"scrntme_13" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd1"="ksads_15_902_p"
)
df <- (df_ndaFile) %>%
select(subjectid, eventname, site_id_l, rel_family_id, sex_at_birth, demo_brthdat_p,
screentime_13, screentime_ss_weekday, screentime_ss_weekend,
cbcl_scr_syn_external_r, ksads_15_902_p)
df <- df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"scrntme_13" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd1"="ksads_15_902_p"
)
df %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"scrntme_13" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd1"="ksads_15_902_p"
)
df <- df_ndaFile %>% rename("ids" = "subjectid",
"event" = "eventname",
"site_id" = "site_id_l",
"fam_id"="rel_family_id",
"sex"="sex_at_birth",
"age"="demo_brthdat_p",
"scrntme_13" = "screentime_13",
"scrntme_wkdy" = "screentime_ss_weekday",
"scrntme_wknd" = "screentime_ss_weekend",
"cbcl_extern"="cbcl_scr_syn_external_r",
"ksad_odd1"="ksads_15_902_p"
)
df <- df %>% rename("ids" = "subjectid")
library(tidyverse)
df <- df %>% rename("ids" = "subjectid")
df<- read_csv("./part-0.csv")
as_tibble(df)
tibble(df)
df_long %>% rename("ids" = "subjectid")
df <- df_long %>% rename("event" = "eventname")
df %>%
filter(!is.na(event)) %>%
count(event, sort = TRUE)
df %>%
filter(!is.na(eventname)) %>%
count(eventname, sort = TRUE)
df <- df_long %>% rename("event" = "eventname")
df <- (df_ndaFile) %>%
select(subjectid, eventname, site_id_l, rel_family_id, sex_at_birth, demo_brthdat_p,
screentime_13, screentime_ss_weekday, screentime_ss_weekend,
cbcl_scr_syn_external_r, ksads_15_902_p)
write_dataset(df, "./", format = "csv")
write_dataset(df, "./", format = "arrow")
df<- read_csv("./part-0.csv")
as_tibble(df)
tibble(df)
df <- df %>% rename("event" = "eventname")
gc()
rm(list=ls())
pwd
library(rpolars)
library(rpolars)
install.packages("remotes")
remotes::install_github("r-rust/hellorust")
library(rpolars)
setwd("/Users/shawes/Library/CloudStorage/GoogleDrive-swh004@gmail.com/My Drive/Projects/gaming_behav/main")
#| echo: FALSE
df_wide<- read_csv("/Users/shawes/Library/CloudStorage/GoogleDrive-swh004@gmail.com/My Drive/Projects/gaming_behav/main/_data/df_wide.csv")
#| include: FALSE
#| results: FALSE
#| echo: FALSE
#| warnings: FALSE
#| messages: FALSE
setwd("/Users/shawes/Library/CloudStorage/GoogleDrive-swh004@gmail.com/My Drive/Projects/gaming_behav/main")
library(lme4)
library(lmerTest)
library(tidyverse)
library(arrow)
library(afex)
library(formatR)
library(report)
library(easystats)
library(parameters)
library(modelbased)
library(effectsize)
library(see)
library(performance)
library(insight)
library(DT)
library(data.table)
library(arsenal)
library(kableExtra)
library(equatiomatic)
library(gtsummary)
library(ggstatsplot)
library(papaja)
library(stringi)
library(lavaan)
library(corrr)
df_long<- read_csv("/Users/shawes/Library/CloudStorage/GoogleDrive-swh004@gmail.com/My Drive/Projects/gaming_behav/main/_data/df_long.csv")
#| echo: FALSE
df_wide<- read_csv("/Users/shawes/Library/CloudStorage/GoogleDrive-swh004@gmail.com/My Drive/Projects/gaming_behav/main/_data/df_wide.csv")
model <-  'i =~ 1*Aggression_T0 + 1*Aggression_T1 + 1*Aggression_T2
s =~ 0*Aggression_T0 + 1*Aggression_T1 + 2*Aggression_T2
# regressions
i ~ Internalizing_T0 + Sex + Age + ParentIncome + ParentEducation +
MatureVideoGames + Weekly_Gaming_Hours_T0 + MatureVideoGames*Weekly_Gaming_Hours_T0
'
fit <- growth(model, data=df_wide, estimator ="MLR")
summary(fit, standardized = TRUE, fit.measures = TRUE)
